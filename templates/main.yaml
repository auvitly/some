name: types
main: |-
  {{- "test/main.go" | go.AST.P.Files | go.AST.I.Decl.Gen.Tok "type" | go.AST.I.Spec.Types | v.Set "pipe" | void }}

  {{- define "Conveyor1" }}
    {{- must.Type "[]*ast.TypeSpec" . | void }}
    {{- $list := obj.List (len .) }}
    {{- $list | obj.Set "Name" (. | go.AST.I.Spec.Type.Names | go.AST.I.Expr.Ident.Names) | void }}
    {{- $list | obj.Set "Spec" (. | go.AST.I.Spec.Types) | void }}
    {{- $list | v.Set "pipe"      | void }}
  {{- end }}

  {{- define "Conveyor2" }}
    {{- range $i, $item := (. | must.Type "obj.List")}}
      {{- $item | obj.Set "Spec" $item.Spec.Type | void }}
      {{- template "TypeSwitch" $item }}
    {{- end }}
  {{- end }}

  {{- define "TypeSwitch" }} 
    {{- $item := . | must.Type "obj.Item" | must.NotNil }}
    {{- $type := $item.Spec | type.Of }}
    {{- if      $type | eq "*ast.Ident"}}        {{- template "TypeSwitch.Ident" $item }}
    {{- else if $type | eq "*ast.StarExpr"}}     {{- template "TypeSwitch.StarExpr" $item }}
    {{- else if $type | eq "*ast.SelectorExpr"}} {{- $item | obj.Del "Spec" | void }}
    {{- else if $type | eq "*ast.ChanType"}}     {{- template "TypeSwitch.ChanType" $item }}
    {{- else if $type | eq "*ast.MapType"}}      {{- template "TypeSwitch.MapType" $item }}
    {{- else if $type | eq "*ast.ArrayType"}}    {{- template "TypeSwitch.ArrayType" $item }}
    {{- else if $type | eq "*ast.StructType"}}   {{- $item | obj.Del "Spec" | void }}
    {{- else }}                                                 {{- $item | obj.Del "Spec" | void }}
    {{- end }}
  {{- end }}

  {{- define "TypeSwitch.Ident" }}
    {{- .     | must.Type "obj.Item"      | void }}
    {{- .Spec | must.Type "*ast.Ident"    | void }}
    {{- .     | obj.Set "Type" .Spec.Name | void }}
    {{- .     | obj.Del "Spec"            | void }}
  {{- end }}

  {{- define "TypeSwitch.StarExpr" }}
    {{- .     | must.Type "obj.Item"       | void }}
    {{- .Spec | must.Type "*ast.StarExpr"  | void }}
    {{- .     | obj.Set "Type" "pointer"   | void }} 
    {{- .     | obj.Set "Spec" (obj.Item | obj.Set "Spec" .Spec.X ) | void }}
    {{- template "TypeSwitch" .Spec }}
  {{- end }}

  {{- define "TypeSwitch.ChanType" }}
    {{- .     | must.Type "obj.Item"      | void }}
    {{- .Spec | must.Type "*ast.ChanType" | void }}
    {{- .     | obj.Set "Type" "chan"     | void }} 
    {{- .     | obj.Set "Spec" (obj.Item  | obj.Set "Spec" .Spec.Value ) | void }}
    {{- template "TypeSwitch" .Spec }}
  {{- end }}

  {{- define "TypeSwitch.MapType" }}
    {{- .     | must.Type "obj.Item"       | void }}
    {{- .Spec | must.Type "*ast.MapType"   | void }}
    {{- .     | obj.Set "Type" "map"       | void }} 
    {{- .     | obj.Set "Key"   (obj.Item  | obj.Set "Spec" .Spec.Key) | void }}
    {{- .     | obj.Set "Value" (obj.Item  | obj.Set "Spec" .Spec.Value) | void }}
    {{- .     | obj.Del "Spec"             | void }}
    {{- template "TypeSwitch" .Key }}
    {{- template "TypeSwitch" .Value }}
  {{- end }}

  {{- define "TypeSwitch.ArrayType" }}
    {{- .     | must.Type "obj.Item"       | void }}
    {{- .Spec | must.Type "*ast.ArrayType" | void }}
    {{- if eq .Spec.Len null }} 
      {{- . | obj.Set "Type" "slice"   | void }} 
      {{- . | obj.Set "Spec" (obj.Item | obj.Set "Spec" .Spec.Elt ) | void }}
      {{- template "TypeSwitch" .Spec }}
    {{- else }}
      {{- . | obj.Set "Type" "array"   | void }}
      {{- . | obj.Set "Len" (.Spec.Len | go.AST.I.Expr.BasicLit.Values | index 0) | void }}
      {{- . | obj.Set "Spec" (obj.Item | obj.Set "Spec" .Spec.Elt ) | void }}
      {{- template "TypeSwitch" .Spec }}
    {{- end }}
  {{- end }}

  {{- template "Conveyor1" (v.Get "pipe") }}
  {{- template "Conveyor2" (v.Get "pipe") }}

  {{- v.Get "pipe" | dump | os.OW "dump/main.log" | void }}
